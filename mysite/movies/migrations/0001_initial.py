# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-16 09:01
from __future__ import unicode_literals

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('symbol', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('image', imagekit.models.fields.ProcessedImageField(upload_to='movies/static/movies/images/films/%Y/%m/%d')),
                ('trailer', models.CharField(max_length=500)),
                ('opening_day', models.DateTimeField()),
                ('movie_lenght', models.CharField(max_length=250)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('status', models.CharField(choices=[('NR', 'Phim s\u1eafp chi\u1ebfu'), ('NS', 'Phim \u0111ang chi\u1ebfu ')], default='NR', max_length=2)),
                ('created_at', models.DateField()),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='FilmActor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.Actor')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.Film')),
            ],
        ),
        migrations.CreateModel(
            name='FilmCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.Category')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.Film')),
            ],
        ),
        migrations.CreateModel(
            name='FilmDirector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.Director')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.Film')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birtday', models.DateTimeField()),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('image', models.ImageField(blank=True, upload_to='users/%Y/%m/%d')),
                ('role', models.IntegerField(choices=[(1, 'Admin'), (2, 'Editor'), (3, 'User')], default=3)),
                ('is_active', models.IntegerField(choices=[(1, 'Active'), (2, 'Block')], default=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('title', models.CharField(max_length=500)),
                ('image', imagekit.models.fields.ProcessedImageField(upload_to='movies/static/movies/images/promotion/%Y/%m/%d')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_active', models.IntegerField(choices=[(1, 'Active'), (2, 'Block')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Showtime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('showdate', models.DateField()),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.Film')),
            ],
        ),
        migrations.CreateModel(
            name='Showtime_Detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('showtime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.Showtime')),
            ],
        ),
        migrations.AddField(
            model_name='film',
            name='actor',
            field=models.ManyToManyField(through='movies.FilmActor', to='movies.Actor'),
        ),
        migrations.AddField(
            model_name='film',
            name='category',
            field=models.ManyToManyField(through='movies.FilmCategory', to='movies.Category'),
        ),
        migrations.AddField(
            model_name='film',
            name='director',
            field=models.ManyToManyField(through='movies.FilmDirector', to='movies.Director'),
        ),
    ]
